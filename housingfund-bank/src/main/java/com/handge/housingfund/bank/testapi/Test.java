package com.handge.housingfund.bank.testapi;

import com.handge.housingfund.common.service.util.DateUtil;
import com.handge.housingfund.common.service.util.StringUtil;
import com.handge.housingfund.common.service.util.TransactionFileFactory;
import com.tienon.util.FileFieldConv;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.dom4j.DocumentException;

import javax.xml.bind.JAXBException;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.text.ParseException;
import java.util.Arrays;
import java.util.Calendar;

/**
 * Created by gxy on 17-7-4.
 */
public class Test {
    static Logger logger = LogManager.getLogger(Test.class);
    public static void main(String[] args) throws IllegalAccessException, InvocationTargetException, IOException, JAXBException, DocumentException, NoSuchMethodException {
//        System.out.println(TestBatchPayment.getBOC4Common());
//        PropertiesUtil.printConfiguration("bank.properties");
//        PropertiesUtil.printConfiguration("log4j.properties");

//        Configuration cfg = Configure.getInstance().getConfiguration("bank");
//        File file = new File(cfg.getString("sessionKey"));
//        if (!file.exists()) {//如果未发现持久化的sessionKey,则进行签到
//            String xml = new CreateLoginXml().getLoginXml();
//        } else {
//            byte[] sessionKey = new byte[(int) file.length()];
//            FileInputStream fileInput = new FileInputStream(file);
//            fileInput.read(sessionKey);
//            fileInput.close();
//
//            //打印sessionkey
//            StringBuffer strbuf = new StringBuffer();
//            for (int i = 0; i < sessionKey.length; i++) {
//                strbuf.append(sessionKey[i] + "|");
//            }
//            logger.info("SessionKey:" + strbuf.toString());
//        }

//        System.out.println(Math.abs((int)System.currentTimeMillis()));
//        List<Object> list = new ArrayList<>();
//        list.add(new BatchPaymentFileOther(
//                "1",
//                new BigDecimal("1.00"),
//                "182708222217",
//                "公积金中心测试账户五",
//                "104362004010",
//                "mark",
//                "10000001",
//                new BigDecimal("1.00")
//                ));
//        list.add(new BatchPaymentFileOther(
//                "2",
//                new BigDecimal("1.00"),
//                "182708222221",
//                "公积金中心测试账户六",
//                "104362004010",
//                "mark",
//                "10000002",
//                new BigDecimal("1.00")
//        ));
//        list.add(new BatchCollectionFileSelf(
//                "1",
//                new BigDecimal("2.00"),
//                "22401001040000245",
//                "四淳师盟士首踏珊军准菇承于慊官送",
//                "batchcollection"
//        ));
//        list.add(new BatchCollectionFileSelf(
//                "2",
//                new BigDecimal("2.00"),
//                "22401001040001821",
//                "四存华守玲师郁紧寒碎",
//                "batchcollection"
//        ));
//        list.add(new BatchCollectionFileOther(
//                "1",
//                new BigDecimal("2.00"),
//                "182708222217",
//                "公积金中心测试账户五",
//                "104100000004",
//                "batchcollection"
//        ));
//        list.add(new BatchCollectionFileOther(
//                "2",
//                new BigDecimal("2.00"),
//                "184208222221",
//                "公积金中心测试账户六",
//                "104100000004",
//                "batchcollection"
//        ));
//        list.add(new LoanDeductionFileSelf(
//                "1",
//                new BigDecimal("5.00"),
//                "310972700000300477202",
//                "段丽鹏",
//                "0",
//                "LoanDeduction"
//        ));
//        list.add(new LoanDeductionFileSelf(
//                "2",
//                new BigDecimal("5.00"),
//                "310972090000300338202",
//                "李合宽",
//                "0",
//                "LoanDeduction"
//        ));
//        list.add(new LoanDeductionFileOther(
//                "1",
//                new BigDecimal("5.00"),
//                "176708222268",
//                "王小一",
//                "104362004010",
//                "0",
//                "LoanDeduction"
//        ));
//        list.add(new LoanDeductionFileOther(
//                "2",
//                new BigDecimal("5.00"),
//                "182708222228",
//                "王小一",
//                "104362004010",
//                "0",
//                "LoanDeduction"
//        ));
//
//
//        logger.info(TransactionFileFactory.getFileContent(list));
//
        try {
//            logger.info(TransactionFileFactory.getObjFromFile("$20170728|522400000000000|2394858480|f|3|156|1|2|2|2|2|0|0|*|\n" +
//                            "1|156|1|1|184208222254|公积金中心测试账户一||176708222268|王小一||||20170728|19189|kk||\n" +
//                            "2|156|1|1|184208222254|公积金中心测试账户一||182708222228|王小一||00000||20170728|19189|||",
//                    BatchResultFileSummary.class.getName()));
//            logger.info(TransactionFileFactory.getObjFromFile("$20170930|522400000000000|2394880768|f|3|156|1|2|10|1|5|1|5|*|\n" +
//                    "1|156|1|5|184208222254|公积金中心测试账户一||182708222217|公积金中心测试账户五||00000||20170930|50026033|||\n" +
//                    "2|156|1|5|184208222254|公积金中心测试账户一||182708222221|公积金中心测试账户六||BANCS.0169|校验位错误|20170930|50026141|||\n" +
//                    "#END", BatchResultFileDetail.class.getName()));
//            logger.info(TransactionFileFactory.getObjFromFile("$20170923|522400000000000|20170923000000000024|a|3|156|1|2|10.00|2|10.00|0|0.00|05|\n" +
//                            "1|156|1|5.00|310972700000300477202|段丽鹏||310899991010008580716|公积金中心结算账户67||00000|交易成功|20191020|20191020EBB0000000202045||\n" +
//                            "2|156|1|5.00|310972090000300338202|李合宽||310899991010008580716|公积金中心结算账户67||00000|交易成功|20191020|20191020EBB0000000202045||",
//                    BatchResultFileDetail.class.getName()));
//            logger.info(TransactionFileFactory.getObjFromFile(
//                    "10|184208222254|50053271||null||-5|20170726|155246|75165886.56|08989||156|1|75165886.56|0||||对公跨行转账汇款手续费|N|00|000|\n" +
//                    "10|184208222254|50053271||null||-5|20170726|155246|75165886.56|08989||156|1|75165886.56|0||||对公跨行转账汇款手续费|N|00|000|\n" +
//                    "10|184208222254|50053271||null||-5|20170726|155246|75165886.56|08989||156|1|75165886.56|0||||对公跨行转账汇款手续费|N|00|000|\n" +
//                    "10|184208222254|50053271||null||-5|20170726|155246|75165886.56|08989||156|1|75165886.56|0||||对公跨行转账汇款手续费|N|00|000|\n" +
//                    "10|184208222254|50053271||null||-5|20170726|155246|75165886.56|08989||156|1|75165886.56|0||||对公跨行转账汇款手续费|N|00|000|\n" +
//                    "9|184208222254|50053271||176708222268|李十一|-2000|20170726|155246|75165891.56|08989|部分提取|156|1|75165891.56|0|||102375006285|部分提取|N|00|000|\n" +
//                    "9|184208222254|50053271||176708222268|李十一|-2000|20170726|155246|75165891.56|08989|部分提取|156|1|75165891.56|0|||102375006285|部分提取|N|00|000|\n" +
//                    "10|184208222254|50053271||null||-5|20170726|155246|75165886.56|08989||156|1|75165886.56|0||||对公跨行转账汇款手续费|N|00|000|\n" +
//                    "10|184208222254|50053271||null||-5|20170726|155246|75165886.56|08989||156|1|75165886.56|0||||对公跨行转账汇款手续费|N|00|000|\n" +
//                    "9|184208222254|50053271||176708222268|李十一|-2000|20170726|155246|75165891.56|08989|部分提取|156|1|75165891.56|0|||102375006285|部分提取|N|00|000|\n" +
//                    "10|184208222254|50053271||null||-5|20170726|155246|75165886.56|08989||156|1|75165886.56|0||||对公跨行转账汇款手续费|N|00|000|",
//                    AccChangeNoticeFile.class.getName()));
//            String[] datetime = DateUtil.getDatetime();
//            AccChangeNoticeFile accChangeNoticeFile = new AccChangeNoticeFile();
//            accChangeNoticeFile.setAcct("184208222254");
//            accChangeNoticeFile.setAmt(new BigDecimal(10000));
//            accChangeNoticeFile.setOpponentAcct("9817101200022");
//            accChangeNoticeFile.setOpponentName("对手账户");
//            accChangeNoticeFile.setDate(datetime[0]);
//            accChangeNoticeFile.setTime(datetime[1]);
//            accChangeNoticeFile.setNo("15115451515");
//            accChangeNoticeFile.setBookNo("");
//            accChangeNoticeFile.setBookListNo("");
//            accChangeNoticeFile.setHostSeqNo("15115451515");
//            accChangeNoticeFile.setCurrIden("1");
//            accChangeNoticeFile.setCurrNo("156");
//            accChangeNoticeFile.setBalance(new BigDecimal("1000000"));
//            accChangeNoticeFile.setSummary("五舟汗云科技有限公司");
//            accChangeNoticeFile.setRemark("备注");
//
//            String data = FileFieldConv.fieldASCtoBCD(TransactionFileFactory.getFileContent(Arrays.asList(accChangeNoticeFile)),"GBK");
//            System.out.println(data);
        } catch (Exception e) {
            e.printStackTrace();
        }
//        67|53|50|50|52|48|50|48|49|55|48|55|50|52|120|72|104|110|51|83|80|80|85|50|
//
//        String codeAndname = FileFieldConv.fieldBCDtoASC("789C9D5DDB761BC5D2BEE76934E7996B5E623FCCBC4CB0C9766C4C2CC996AC93 2DC9B26C9D6DC996424820014C36C4404202090EF1FAA7AAA5B8ABA75A33FAB9 60B1D4CCE7EEEAAAEAEA3AB5115A56C6CB7CFAC70C6BAF2A9BDDB3D9BDE26169 ABF2B1F6AAF4A4FEDBF4ECAC35A91FEE15A7F05FCA2799F073FC21FCCC5446BC F078B0934BF8C80A4D2363C9233B3B9D1A3703F81F330402BF0C3FB31570372C 6C9DBF4DF8BB4E687986238F345AF913F6EF5A320042C097E1676E6858193773 37AB707A3619541F0E8E0B5BC5DADEA3933F877FD47F2B6DF50E1850FC540685 1F8CF0330F467C79247FB6D764E765C8649B43F8D1BC7C1831E4799527D96CF7 5EF7DE340B30B36E028811CD238011B22F278F2ADDBD72EA99C0CE189968C830 E5A1C2C6F4695A8CE8CB08C3802182D16F6B38849B07629811F3188424C7FDDA 5F1C46A3539E4C06FD3FE6EC839FC988F043441E03F9D69687F6FFDBCBA7E65B 1B6665C310E1C1ECC188953E160378D070629C945D2B6CA4A68E0B186E689A26 59CBF924FB7DFEE1A83BBB9A5D4C87D3A7DC8C4C050D3122342F34AD0C215AE9 B6F021FB1787A1CE08BF8C307C8027FB955FDF2D2F18F80E65B14BF1B920131B 81988B84A39B0B602FD0B85945681127998A4C54EF0FDFF1FBC560804498060C 115A9767FB8F536300854D138608DFF4B6CEAB3AADC9A000E7981630049DC9E6 DEFDD49C8333B16128A02AB074D37D1849D0F569A5FDBED4293E9D9C8DBE0325 58D9CC668564E95562A0FE9500E80E3C4EC5B0FC43EFEBD45A0438CA8C78DC32 C949B0FBE6ACB7936BBC8C14F5FB747433F19403FE267F26ECBD288ECB93B4D4 37900F7C4031294AE5616A0CD06A2670B74297C72BCC03E862014F13DD12B6F6 F6D66BDBA9513280825C4D36AFFD7D7F23FD5CA26F2314E46B72F655CF5B07BD 526A1438FD2C0B86C84E8F1BBBFCB9C561A05162C310D1AABB6F4EAE53638056 B5220BC3A5F27570ACA1ABE52A18F86584E1C210A5C8E64E2E3506D2C30B6D7A 7A84076BAC46B7552D8ADF45083E0C39D2198C52BEFF6AFADDCE04CC9D853C13 C3023FA16819C78CD00218229C5F697779CE676684E779441BDBB0086DF77A1A BBC2564F4EFC32C230A221433EA9C2D6E8FC2D87519EB446924D809F51C448CB 448826FC315B466CD70A5FF27AB95D3B2A7FC2A36CF239FC0078160C1984EEEC CE75EFEDBD68DCBF433354B4C8FEF9CC069E0E888C961F376E228EBCD7D92EAD 37A669B56000B26A47DCAD9CD0B5EDDE251899D542E5A6F428C60F96BA979638 A36D178688ACB54603DE82E13040D66C0F86889C54767572C260809CD87E6839 19F92E12EEB3D4DE5FAB6D74EFB59E5CEC02EF2FAE198E4275F8C18A508330E2 3679306CFEA6BBE1347FDB9FAE6D00EADA83C347A5CEE2E45CFC0D5B9128F821 A260749A5B263D072EFFD4699AF8EAF11C88700C653FFBD7B53F398CDD37FBDF 4AD260A88886D8D748D60DE59C3C6B547939E74E6D38259DC84671E8A2071B8D 0E8FE1A8180EDA398E0D43E43C28BF6DCEB2BB850FA971F0C2E880114E28D4E8 B46E35D72ACE5E47AAB80245E2B2CE9FE76FE3F3B893E8C2D6DE0BF83577283E 5551232E733C718B96E6A6E3B19D9DFDE9A7BB0D3566F13E0D73F4618850ACF6 9746BB72EB446A0530442472B279A8B173190C90483723AC7789563AEB5DD27F EAE503ADF78846D1E53A3ACFC8B933EA47FB97F2DC418BCB8D34BC69925515DE 751F0C1AD5F1ECEAE8C592DB128368E21A231DAF581A1775FE1482FF51C11096 866BC310D9AFFC9AC667C061C07EB94E3444A953C96BEC51064350C7050CC252 CDFB7BB3D41820F16E64AD58C4200D473F0FDFA5A1701CD102CDE646D60BA57E 64BD68EE4AB6AD62C097114664B33874978AF5FCC9FEB73C8AAA41F0DBF0B388 CE8E22C0F94EA1CA2038AA44E07711822110248BA0D7DA8D4E23B871C1D707D3 B4689145E09930E4A9B7B7D27ABE0F8EABF3B383C38B724A3C0F5C5756346411 6D3D7CD71AE1DC1041F7B5057ADAB3435739C50A1B9ADBB5AB4A932B4E31CF81 A194F7D1C9EBA363DD7D74AE4B3E8121A0017F076FA49E0B43841F863F0D785D C2CC5570830743446A2F8FC7BBA931406A3D1F8608C5FBD79A9B318781740F60 889C1DB557B98F1C46EDD52E5A273215EF28154387B324D271AE726A769AD1AE DE8B9D98AECA17AE3831FDC832A1367CD8F8A6C89F24862ABFF8658401FE3F7A 3FDD2F9EF11A923B8DC0E2F5C1E3A7CCA3A3D1D40C8698871D7328EAFC902C06 F0B80F7608D5D4FD9BC6CBD418A0A97DB042A8A6CE3F5C612DA0A97DD0D4F484 BF3CAE8E6B2F529F3BE8ABF64347B13B4B6F225B23CE1F8ECA618EB033FD0086 083D1AFF1CF73552C0A10045A21D764C6A0ECD5E8FAF5263004522CDE098C415 190EB64FBB69314C9C87091844B39C6C17B65A23F6CCE35040B70456E85A64E3 C2F25A618BD70BEACEE09711860D43E4AC89B4F96D1CA17FD32C2EB4806A7BC1 0FD1491338301F42DD4ABB35CA3D5A729E73F3422ABB8045745E79EDFF8105BA 2FF0008BE8E0C9EBEEBB95B14017073E60117928AF0DDFA5C600690802816124 63ECBF2E7C687DD2BECA1F463CF07F47FFED2A0EA4B366EDEBCE4DEEA6B6D1F9 5FF6FDE09831A61FEFF4BA0B73DA55DD4AAE702B45220B63C1AAD007C7DDFBF3 DB0C071D20B4198D51559B06BAFBF5326854C0D16502A00993D6364AEBDDFB77 80BA65A3F63532360010213F7ED0FDBA709B0A02835119072088CB27DDF27AAD A50BC4E84B068C70BA2DE39F57B850880DF042C7A25A68D8EAD466F9041BDC51 011105005138C8AC1686D9C9B3F21A986129C544CC2F9213876ADAD2EDD1135E BFA9D6387E097145940DC20A69B6615C59CAC0C82406CAC6CA3BBC7C7F45CCD0 00D9A0265F1AE8E1D552680C251A201BD4AA4D03DDF8672934EEBF01870965A8 D287E6D5CA8A568039A163D378E530D2D9AD93939B452CA73CC89F8C5EC0ACA3 1B11B122540B119100D4055072449D5E1EDEBF98BBC0124130DC6D787085246C 7EF4F088F73331774D217C861FFAF08F3496FBA17B31DB981C556E4AA5D0500D 32FCBFE1C320F4E01F696CB6396ED72667EF01003E8E46E3DFE3471024CF80F3 8B9CF8ADC7479DD2317857167E49B0FB2F5E9D0E599FBFA17A41E10713A00D31 E6A8D011E80618103AF83BA245ECC5C23B006FC29849FC5FFFEE4FE5F92DBC95 0E351501C28493D2445723D9FFE1E3F25A6A1721EEBF89BE46C299F96745DE8A E440901321DCA9381B0A7F153E149E6902611C10CA89E90A20F9EEF5BAB239AB A2EDF0E462574FEC3B6AB93168A496279CAAB2A1B2C4A93A6E1CBD3D2AEFBD80 3F74B7979E0AED21B42FC69468936097CE76635A5A1FEF01B3F0B3BF9B791C1E 393180316211ED0CCEAF5AB315DCC168FF58736991BD933783F7629E85ADDC21 48CDE2969C8E952D809D4BCA1D1385D96CB1D6D82C8F1680ABC9870DA0A688D6 487315C76FE52150B2B219DD0DA2A358F51E459096A940C20F384F0BC6882C0D BF1BB26E0336E48247B065C318F13DECBE190C80559215C202DA52A12DCCCF71 C498C44667D7D3A7876F86AF17CCB380ACFC9304088C63B9624C43C3D293BDFA EE1717BD55E68974C4D01555196B1A673B47475419960F633423E47205103CFE AD00C688D434BEBA686B9C9C1C8C87494D188DCAC87B7AFE073F97F149E5E122 B6A584A8212E95817DB40D3126ED23061A23763DCCF66BACC39305833DB44D08 D4119576D9D2D149157C6BAE566D0BC6089D5AA336EF50E64004956C18236AA8 71733E4E0D822A0882B00E35375AB7BCE3FFDE3D16060D0E88C052AF6CD8AEF5 0BB36FCBA3EEDEF92F6C5C980113172C08C52A61E6CFF107C8C4249F804D021F F8B15481712FF73165360072AE8D2E4CA28BAAC3C9FBD2A3D48E50D4460E6874 EA3569DE4CBFABFF91F66040BF89E140A0894A7BF7EBF3EF532E08ED08C78459 123F406573B07E545E76F2C90B54BC01D10F204B8E25E824C1EAE974D0BE0B46 5347AFA982A301E5D8B01E225BA32B2EB2C92E1B25CB892EC64AAEEDF49126ED 26935140F04B0071E11A4A65FC5C934FC0DC57E733F1204E41DD8117A52C0FC2 8443C42EFAE09026A7DBF9DBD34DD8C5E4D36D61C7D8CAB9013F20B903983D4D 1E5DD384B5B865A2E0B8209554F2FBBAFC5C557C3FB744EE971119849642F0CE 93B35E5A90790AAA0969D6643985AD099F0BCBE463CF9763C1AD8AD0ABF3FBB7 7CA880BB7EE1AEB9766828118B6CF6E0411C223AFD73D3B3F397D36CF72D64BC 2C764C650743C4310C37BAB6463744796C577330723C65E0B9E1BAB1D34D77BA B2B91E62C7D0754F0391EB9D7C4A0F112A39177204A80FABFC4F734B931FCEC5 10D0707103E13396880DFE202E3C14F70608B26254952C35DCF9626702AE8593 EA325F151387C46320BA855836E5E7CA6E96977D4BE522FC1240CCD0569C4BE5 B5C3C714E2600AFF9342E0B90BC9B3205D81A699FE9C3A6D0F3959445409659A EBAD51EA88AAA08603424BDDEDB7E95584104CCF054546A8D1DFBAE033949818 DE9C221E0402E9F15C6F680A129840A000419D4C72F43AB5E1BB66792777F846 AF97A997C356F2F5E00764C52036965F9F0E532F134522B2EC2C85353B237044 241D80F8150018A0DCC82CA6BF683C199C1614B330618CE6006D1F1DA7064165 E5A33EA6A5003FF23CCC40884200741C121E2EAF65B32B3B0E91977D28FAA1E6 CBC9338DCAE20E1901E2C299491655FF5B136DE4CE4CB12C4F1C32D265923F64 E05729C0C61E2E708D8438AA920354FF5B9303C8990362BF82D83D15EECCA9EF 7FA875224B1F949A34518CCF09959EA8FBF0CE1718A1A19C4FDD87D5F1EC2127 475CFD12CEC38485D27DFAF288CF27E12822402CC8E62120AD11170465937E04 840DA70439E2767295CBBBBCC198CDC71D2AA29AC511C17269ACF44613DB61C3 E5381F5776EA189661474B3A782083C437D8B484E70701D07A202742E7DB1522 4C7822047E2C5199CF6DE6F2B7E7F3C0E21E22CDED97ED979022983A511FCB28 A2FFB6152B385FD1659333796B190431208385C84EF67E952FA7E1525DB02824 634229133DF45B1AD70257F324402CD03BD4F4A8B2A4E5CE6B2C968120A7C268 751E82BB4C0B0807226F64770E7BF5EDE6AFE37ABA20DD7C6F5CB118497A2E7F 849CF56976EFCB6125EDA2B07ACB03AF054D003DD21C699CAF44CC675E99268D 61655ADA1D12B4096299127C6A056FF50204042F15C5347CDCCC47B7F69729C9 2B60D0D625C7C660BBF16B6A5B170BA20C53A4BF4B7B2472E4F57BC49017F7C8 40DE257BD4BACD698A01988DC63D326CE109972B3BD02B0F1683F066A9512B0A 642C66E3C4E2453BFF0E8AA9E3046236A86F8943EC7CA8AB34660ED5004130C1 9BCC64F74DE3ABD4096C6226C8BBD44DB6D998A6E65D018289DDE476B4B7AE49 2DE26602B723B0C65C353BFC8966269CB2F411C48879BADAB5061F23E3D49400 31C5014FAA8038513C79FFA93E943DEA815FA253D252ECDDF2A8C82780B1873C CE08124CE82EA589C24302CA92283CEE9DE9C4EA54F812175E4011C28D1521F0 F50B7C050442CC0B84258FBE2EADFFF8C1E1F9B2B47E13E07CB0D5C958F5A835 4A69D28B1945FAD8A624EF3E9C5D6BBC69AEBA73F82D14D466E02E4E18F260ED 88D92DD6038AEC68457737875ED9CB93FCA374F6A6280AB5CC587E026447DCE9 BEBBDC88FEBFF15B247E0B301654142A055E8BC45D95B04CE9210A8485BC4C8E 9734BCDCFE7E292FE3A16339B011345EFFC3940FA0703B86A692E5C256D053F4 A73297F3CEED18F28EE5C5C2AEE5B7E541B9DDE7768D3D6A10C68759523D743B 6A55E6F75CE6D4E21625881E0828696CFC7E7723255D703636F8D4A8F3A935CA FF94DA5589C485C89DA7F8D007B907A96FDB0204B9995AA2DBA7EFD325E5CC17 63891474696CF86E2797F2A81110737B58B670BABD679C9B92B38761576C0744 962887D29B150A48503DD82E640ED20B7AAACCC1D38F4B330705A93D416A6991 547124931B17EA0BC5218DB5466C3C8F551B38132C9AA4B905DF97F9F20AEE1C 453D08D13C9B1E33E0E9AB958ECA72CD72DC2DA7A450D8E29881024925B5EBEC 48D7CA84F1EDA119073591B66AC60D78338E03110BB3608CBAE66EA667A94150 7D4255A4E2E4EE1557580E9A718E23E8A53853971401B3CE5D6CF1E0C6425D10 2B4B3D1FE460073CC4B4D8B676933F8943C0AF8B60EA5DA0CD51411D9C99AF38 0D9D707CBDF70832EBE0C3B50D7021422C7B72B4F620E65F5CB80D4D27100E0F 29038E777854DAC38795E77361658BB91D68670115F0CAF57AB3F843DA0A7831 272889547C16CD2B9D27870141A2434DA41209EAF44F5EA505C1389009913B25 8853F96AC4DA3D71084B2CC60E69742012D0DFF83A26761E68F54019A452C236 A96B2E6BDC4CB0B10AD4412A553E3FBDD2F4C2E06622FA957862F3E50CBB09B8 51E15ACDCA16EB28030E76D1D74616B5935B619BC5A2907F89C228CFB29AD82A 03820AC343AE55EAF32EB69726F3D84AE11680615718CF888D5DFD778565A146 86389D41EB4D4F7F5DA19304EE15C4EA9492ACD38F47C7A3C3D45B8E1CECD942 926475AA91A4495DEA1E41850F650AE983BC4C8BBCD62FB6524B154AB707BC4C 33516AA5D9BB74390C0B685F81C66C14D3030EA73501D5A30BBE0092999F29F6 CF8FB5CFD0F7DC60D900F58F37D7CE52D6A590B6A372FFF0EC6CBCC7495B5C33 DBD0D8077B93282537B97E6AB2A3A1E71BE20FC8C986EC6921C586D819590086 1A9A88EEF489A6169F634E145D1F799CD61D1CA797366C9867FAC0E1C46D17D6 AB8755419B69BB70BADFDAFF2349A959A8A97DE06E9A4D315B6FFEB6C7FB2EB9 19A11DE4BBB1762EBA2E302C88E8E5049C6CD1EA867EB79A7ACB0581919395BB F248534DC9F0B1588EAAA50DAD962ECFE40634AE0A87730A32C24090F575021B 82017167BCA87D723077C90C80BBC9952F6C96C68F52D30B971A9831D5029A29 35BD50CE447C8FCCE4449738CBDDCAC44C6CA1FE252AE9D5FFF84ADC3FEEB437 B517E107A411DE17697E575617C5676686F216B830466B63DFAFB03CD165CC03 9F14F5703C4A0F22CC1988F739F4A0CABF98BD490D825A3A08C4F589A68BB3D7 A7C15784CCEAAD0B2F5306B43FC35B22E1A28B9EC6E0E3EE1DD8612B036D1968 3BAA46A9534B9D7684ADBE32D08D8152E848D7D38FF3B9081068C140B9E6C73F D3E79821D758191B664268727EACE9A6C4CD44D0C4518242660896EB5C35A8F1 A24500C8CAB80049A870DC9DDEAF68F2379925083A40FE26B57DF6BBB3E1D2B4 116E672C04F343EA938D8E9AAE2EEC1E07C10E22562600A2126B6767A0B9B573 44C50679067610A1C19766FA9988BE740670AB92C0325D81D1B06DA081711342 E0D22B4D0487D32C485803B52FA1C9E4F50A208226368CD16AC0672BE838E417 C3893900C047905A0DA0DC1818ABA645AEDF6A08CB052FC57250DB92B19D6F3A 7C7C8D5394C86C862F3ABB486347CF56E013EC816804A2D98C24A6F36633F7AA 85944028D3267A93950CFFECDFA9190E896B22D792B1D6635D821303827431B1 E30DD9A1DEB5A60714B71CD1A512B8969A8CF55DCD72B81D42D637312B88F6BD FE3BA74945635C9C0224D2B13655D4671F74A1E5388850D4A60B20E474DC2F6A 7885033111C41339B312AFE8726607BF67B350E02537CF533C9198458B9CE32B 6972F63C116C7E8CA839748B7438CB040F32D571F97F75996CCCA250C74534B6 14DB6027A72947E0F6487423850C0BA5D1F83FBAD684CC4C90F9A17ECF569281 BF5B6139C82D10D1B3E98D29AFB3E33810540A16F61A233319FDDC2FA44EFE12 3301BEA52ABBB2AB494CE6088B2A1BEAF1944C5E1D0864F65276B36390C06E50 8B672B49ED9AF87D3E57BED5A7EB0963CC42CF31E1ECF37E5F93CCC204C0F0B4 86AA3C8F72391FDEAE1E7D6AECA7C6C331D00D6201B5791E7590EBAA2CBAEBF5 0F529747B538036B2E806618E5A3CE85ACAE5920D7481F170975791EBD41D5F3 C3EF39907A5E5AA6A1FADAF1EE6441859EA7B4CD3DD2A8798EF028B850A1A7FC 01DD9CD885A15EB4F19901222E8D6FC69A8C100604C505EAF33C7AF40D6E3557 410E048F3EA8CBF368388CE7A34E0D1A4E36EECB02C3F113B4F2B57DD1435CDA B76A6D7A06B5E5C5ABE2955A682BFED0E24A66A959F49690421B2B9BC8D8E4B5 A62D3E97B88BB2073D513DAAECCADD0BFEBEC9D10C959D83116C622EF41FE874 37C347682E3866AC71ABBE032CABEEF00870507B93B18AEE19044E23211338F8 5406118CE7BFAC50CC8182E1384A8E9E154E9E8DB15F9069C6D2F716597996E3 8A771C94BA7EBE375F3562C2A45EF1CA853EFA0158D2F194273F8CB05E1D6D26 BD4202513E654CF7120A4B19011228207E38FC697C95F4B7B10A4F1EB3C39F5B F993C55559FB19722791938B9F677CCB4E8E3B458371ACBB237F60B855ACA406 1133B1942C5233FCDFE9F9DBD1A35872E92267D4726DA15524873BA823F023AA 51A09DEBD25677CC2B211BA050C7D210CEE5E5656A51475BCF45EE54BA3156C7 1A2F3957742096E5C55E31C8CDD23F782234860B5A958A7AFD54B3275CE76414 753710B98892B8E96C192986A0A62F625622889587199B84D9467DCD2D814BA3 4166F30CB13012FE232AE0C95EFD600AFF66974A69824B8503036278EA4B163F AC509020E6868D78894E99FE3AFD2E3508EA38CF16771989E8700D5AD89F146A D9E507498E4FBBD088CB48633E72BC84C78687B73BF207BE79BD82D18FE61954 DE59F0E88485AFDF407B2BF817BC4322FE31A49FE1FFF7C320C80466F47F58F0 AFC828FBDC80EF959FAD50D86B5037A7A4E1E99A8FF3EDC661927E46904B622E 1DB916360A8C2FF6468E62DE59284A4A88256C5E88CEA92F2CDD42B4509BF0CE D6D12214F02E555E93FA0AB52762E960EFD27BCB5E73051B1C05007B932AF952 099DC9F97EE4C0BB8B26A51285744D4AFB37C453AFF636C596A54829ACBB2363 E3AB21AF9FB9BA3B1450DF134F2E49F3D23DB9943D901BA55346801F704EBE30 44E4656A8CB2C3CDE6D91D5FC56D178443CB973EBA7573B09FDAF2C5DB82E8B4 411363B5CCC0583202041BD8AD9C68B83CCD700E6D2A5E523B6C5F0E2631D7E9 278F686029365030DFF8E55655A03E0BE784ED696D3BC9188356A573AE36845E C36CD158799C7CC841FBB5CF0DD07000E0E2CB3E91C25CFC13FEE73F21AA3B0B D49E85FF1FBE6E86AFA1788A5C1B78EEB01A034FBB60DEEB4776CB5E4E9F4257 AC8B9D93F7EA0EABAFB0C00F081308539D241CF395360BEB5E902D6EDDC3231E 998C183393E1764F65733C0E076F95640C316625C3157FBF6B22C4C1C1231C99 F9BDC44E866B4537EB657036C0CDAB949C64B8D19B4E6D199C0370B6187393E1 BEDD9D3E5D06E702DCFC7EE625C35DFEB97CB11EC0B962CC4F86CB669B8F96C1 F900E709F52467196BD4D3E92BF9F5484B85C3277732BE183393E1EAD393AB65 70C8778118B392E126F5EA70191CF09D31D7C576325CBB263F59198703BE330C 31E624C3E52E5AA36570C0778629C6DC64B8612BDF5906077C276AF764BDAA85 EB3FE8E597C101DF19B618F393E10ABB83E23238E03B03A582BAAA867C979AEA B0D3BE83B355387C9A49C4FA6CE24ED3C0B56B77AE620E0EF8CEF0C498950C57 5E3B1F2E8343BEF3C5989D06AEB57476C87781187392E1060F462F96C101DF99 19D1528498CFFCCEEE356599755438075FDD32C498950CB793AB6E2E8303DA09 1F16B9C3E9DA19754613491BBB2A1CDCE26CD312635632DCF4F7B7DF2F83C3D9 D962CC4E867B3E992E9D1DECACE9084B484EEFD4B8BD925C52B815AE18B392E1 929C72B8D8B92FCF4E864B7AF117173BF7F139C97049AF1D231BCFBD7D5E325C 921710F49D35F702FAC97049CF2A83BEB30CE1EA95D858E7EA3D6CE64FEEE07C 15CE0736B64C316625C33DFF45B6B2E370B0B39625C69C64B8DAB66C41C5E160 2BACB95FDB4D86CBAF2D878393CC72C498970C77B8295B9F7138DCD9795E88EC F6D2E485143664832C7E1FC257013D316626C3C1C56A191CEEAC2FC6EC64B8E7 931FDF2E83032183782538EAA4D9E95ACA55DAE7E34F708A6F0F7EC0470BE71D EAAC64B866F1E478191CF01D442B61CC4E866B7C236D0503078B85B8258CB9C9 7093D795E23238E03B885BC298970C0709A6CBE080EF208209637E32DCA87330 5906071A052A184D9AAF3FEAF4C79CA38A79EC0C1F8DB4A1DE96E67FF7AF755D A5E22098F96DDBF38A5B89E8FA8A5BB97712D71D19C90E1DA769EBF7C26DE32B 00E45D904CE74F7C87DE0EE6ADA13EFD1D6D6BA8C6CDE9DDF147FD7FD8240A04 DDC9CCC7AC44B88B7679B00C0E78DF31E6637622DCC9F5C5D2D901EF3BE67CCC 49847BD1BE682F830315EE58F3313711AE779DFBB80C0EF614239D862C4B7AB8 8E643A3070204A18F3346459D2C21DEC4806350307A2E444726093BCE3F04853 7DD9AE5D14468F0EB677AEC77BC3D7C569FDB7DDFBE26319187E40607880C0A0 B6F05AF1399F59AFA42501085AC00EBC98671093B571B3BBA1037155103454A1 DE11C624292D6C5DECA607815D842A474853930E9393AB0B926DD4F8AA539B9B A5B6920B073068BC409D238C397A9893ABB3E632186051A87484317FD96CA64F 97C1C01E6197529290AEDDFC5AA1F132DDE6E3326D71AB91437E9A8B507EFDAC B7EC2284708EB837C8E5689AABC661533A7A99AB063EF3EB8A312719EEAC2909 3803879B31BF1BC87DC135E672ED55616BD9CD05173BBF1BB8C970495E6464DC 40988312EDF4E672E5E1DDECE21624D0CECB88313B19AE7133192E334841757B 86B0DFE4EA329DC95794CDE5B8C907A2EECDAD20390AA2B1336A4589768C9D81 8B9D5B414E32DCB0D978B90C0E18C59B5B4141325CFFBABFB10C2E00B8C549F0 89F1F4A7E8B3BBF439EE2400BEF3D02222639DD7C70FAA4F34EF71735611C400 6DCF130D3BE59BBCA661E759F3AEBE5CCDCF801F70137C316626C3F537240DCC C0E13203316625C31D6EB697C201C7418DA5AD38063470E5D9F2D9813C888EA9 D431A0812BBC5B3E3BE038EC9D4AEB78750ABEF8BC974FA7E06153FCF9C96125 031F15D3C122356D316627C39EF55AB7696091AA8E18739261875795CD34B048 DDB9EDE4CAB0B5ED485ABAD4A4887F0E9AD9F7C498973CABDD37ED719A598181 E8FBC29E920FCB9361AE7B963FE1E59833BE708F0331261FE2D7E5B5C1D5E166 F18BF450207441468C49FBDAAC9527E98D41D8C5C010638E0C527CCE5FD93810 D8B3C014369EECF19D40A9F7C5AE9E3E719310E81358624CA2CF6C547B95DEAE 44CAD8624CA24CE3AB762D3D0852C611631265CA8355409032AE301425CAA836 65F1D5FEC5329B12A9E289314B0FD3F8AA355A06039A20F0C598AD87397FBBDC DE46CA0462CCD5C39C5C7DF226B33091A8467415639E1E66F2C5DE52B3DD0318 7C4186B610FD93AF1CDA5BBFBB0A9AEA896DE2ADDC8158328C99C970E77F4CCF 96C199006789312B19EEE0A7D3A7CBE02C80B3C5989D0CB7B73E58EC240B6703 1C6443D0FCF5F296A6C28849FBC3FC7527E38A421D8962BA1715CE5F966EAAE3 A4D714906E1EF4A8A435B71D4DF708AE99A58D33F3E11D49B2F441B3992FF21D 99B897240D8489AC7DE551D1CEE8B4C5A7DCC49B5E6112976340F7400A5269EF 5FA4B301E710A8AB49DCFD52F77E0AD3711D53A41C03DF9E2184DD998DDFF314 61BA9D21610D4B3C2A2E8DE91E15E79F0E47103B2239F5161EF666C3FA65EFF2 B059F800FFADEF011FDF2BF41E3A8603EC408EA9C14685CF9AE6F8C641107C2C 92EC55EE63A12A40129F8A147BE5859465A0D94B937F2A90932CB1185FF4A593 9487E84B07397A98C978B8DF9AB01D81D577DD5CF1AE9B6304B137DFA03D38C7 C94CB35A5C1AC477958ADCD38F9ACEEB5CA351E42088EA2ACF0B8F7B9A46CB5C 23B900414C1016DAB4ED8BFD94DEE63904F6C154DE5B9D3C4B3D0FE417E8E9AA 942AE6D723C1247D8F681F4135B3D215958D8E89F969B4A86CA2A949E112B15D 9C8F0B7A4F790471FCB6F44FFDC7459FE4B45285EF563B26D81FA4E57C581BEB 52B0E39AC741CD63E29D9336963FD1B45BE61E8C10A4C6A781699DFD1787BDDE E5E269D8144BC28D8778AC494F2D7C78EE5EF5D9E4DFD1DE40792E47F756229C 559601AA84ECD9CE4C53BBC3E91CDC330B7BC3D33D9B698E620E04F7C98AF432 5549E1B8517F51BA3D7D1FA9D315B6DD46FD03D5A03651D1E1457BFF5EEA6D47 350F9D5C1DEA0239BCDFCDA5DF2F748038165AD2F48DF9A7BA4C6AE6F0137381 BE11D4542FFDB842EB0BB153F0160795AEE1BBDED6CECFADCEEEDF2BBE9E2D76 0DDEB7A34B03357FF886A710F3940F2ECECE8897F694F28BFC7A6DFBF4E3E890 EF8AB9E853A3E691DA228FD4B10D612E48A03A73E160FFA2C03D6177F7B29CAD CC1B73AD1C7BFE9287F4272EDAA2155EB530DD29ADC74F5DEE3D0F84825795A8 DBA6F057DA57953041D8B16D80A76DC72F0BBC69C3CD0377D4C6EEC564B9A5BE E64124AE4B2F1E91F86E2335B2DAC33EFF5A2177CE0AA6F0402310CDDDBBCD9F A4973E1B75B7EDC36943586458D5BD35C51C4BA8BB217EEA52950BAD63B9A2B0 C579AB285C57285C07AB95C8A206DBBB7CE90C371B5C52C4DEAE721C4DCF86F5 D47B844B728077696BA0BDD1C9755AF9C7D6408E83EF2811AD547CA56B71C71C 8CA8951CB44168456C59D38086A30932BFA8FD94ED56CDDB22724D99DAB9DD12 6F58381805A5927479A869E9C12D0B2509EA3D954A857655D3368DB3CF50081C BC071290DCC7EA6665E92B538CE120C0B08A8358208D6F72B3D40A02AD0F3723 7A2449A2C0B7EA875F6562AB490E967881DD710D3894C8AC76DFD47FDB99AD78 2089D999E20221CD8E7F1F66BC5E9B42B38F9DEB6E73F73E7FEBC0D9A1954D98 737FA22B5A61761199135E6E8CEC63796CF8B1318DACDACBA35ECA3C0E145A78 A9D13489D0664735BED4887967C944A1755DF1528C4423DD4B317245954A2173 41210FE6443BD56D47DAB13AAECFAE8E5E2CDB456686825EF81E0881EC753487 1067510A10B0B749B14A646FD72FFB0F563841506CE01D47CB2240C7DBB5EDD4 9A5280602736DAD61A7A1645172DF8F8602A8074F61B7662743C533CE02BD91B FC03BE85ADE20BC980515FFDC5E77CC1EAF0AC980358B8BF539AA66256D8839E 08F0415BD3219B73A9A0E07A4E2C84A18B7EB03341CEF6DC586EB72E1D3CB4D4 9DB244BDADE381DD41F939F7A0F0A1775BDF5EF90A8A8CE8F9E09321446E4CA7 5FA6F4C9081207A03F890239DD5CE17970541E3EBE22AD5C40EBDB9D766A1D84 3B053149C5168267F4969EB4EC63A2A03C7CD0D7A67224DDBD2E91F665AFF9CC 505713424FBED4B400E2743592DA473F35B1D0FA0F5678C7162D3488302A4FE5 9C7E3C2757622D5D04801B8B5989A85D4A71101B8E9E3C328BF3DF1BFFEB1E14 0BBC0664BC796236E0CDA32EC1936B5D8D3D73C9C32BB98F363499CDC1CE5EF3 92AFA6E6F607E712C0FB62B4217B79D0FF63854BB9803180C309E30D1FD7ABB9 EB5C356D6AA5505C81293C56F2353385C72A52277FB40EA43E46AADB0B3D58A0 A3A1CA94EE4CB8FFDFF41688207E003636F5E14351F8A876F27E6DE3EC97D60F D967CD976B0F5816409318628A444E3500CCED34103380D7CFA93365AF59FE35 F5292A661171B492A6BBDF8D6C8D15D58570B88B98226181C2D653BEA8999331 B1FD012855FA28566F27975AA50233469B06B6108D6CE47AF9B4661D9E5B9142 85E59073EBFC6DFA4B8BE12108C4C389FD11E6B3E98F618815452096786E4A12 09FEB9A94EFEFC0D382D85057467AC28E1521373CD5CECFEAA3C54F3E385A6FD 52DC84C25B999B71C4E92507FCF1115878D16BF644DCE6170DBFE70D5ED8D30B 67043C4D6F67F9DBB36FC78315AF2E16CECC83834769A577A269CAC61C3C02C4 17AF2FCA55A7DAD71785FBE293FE516F40E27EE6427F588B5E5ECAD7E549E9B6 F57C76B5F252E160728D4C2C28AEC6CF97B22AEEA481EF9A52732677B897DA6D 102088296E1A72CDBAE6A6012F124AFA5ABDA0E0BD0398C2409F08D1089D4725 3E619F731EA046306CB019E98DF15DEE5164AF7D3AE9122D47416ABC3112A0D2 9B9DDC59533E2ECB83CE8BCAF3ECDAE5A8783B7CADBD9B0940C80BA486FA4956 A766987830EA2AE8256BD24434D16FA7F2107CB0B5ED72F9EE66C402ABD94E26 26A2B906DADA94F8B585B72F916282F418A721FD074AB7474FB8050E9AA55B7A 84D3D272F80166057D664DAA274EB687EF5AA3D4D762146E883CAA4F1C8E68BB 3DA11D546EB7C46B61919D1CBA4AB3AAA91286170B515BB1B8DE1C00734208E9 E5160F293515B200441E89CAB1C342BDF1C5326D849F39B1CC0B3E6523FE8020 7E177EF67F17AFBBEF", "GBK");
//        System.out.println(codeAndname);
//        TimeoutException str = (TimeoutException) null;
//        HashMap<String, String> map = new HashMap<>();
//        String v = map.get("0");
//        System.out.println(v);
//        String a = "a";
//        switch (a) {
//            case "a" :
//                System.out.println(a);
//            case "b" :
//                System.out.println(a);
//            default :
//                System.out.println("default");
//        }

//        String a = "102000\t中国工商银行\t102000\r\n" +
//                "103000\t中国农业银行\t103000\r\n" +
//                "104000\t中国银行\t104000\r\n" +
//                "105000\t中国建设银行\t105000\r\n" +
//                "301000\t交通银行\t301000\r\n" +
//                "302000\t中信实业银行\t302000\r\n" +
//                "303000\t光大银行\t303000\r\n" +
//                "304000\t华夏银行\t304000\r\n" +
//                "305000\t民生银行\t305000\r\n" +
//                "306000\t广发银行\t306000\r\n" +
//                "308000\t招商银行\t308000\r\n" +
//                "309000\t兴业银行\t309000\r\n" +
//                "310000\t上海浦东发展银行\t310000\r\n" +
//                "313001\t宁波银行\t313001\r\n" +
//                "313002\t德阳银行\t313002\r\n" +
//                "313003\t丹东银行\t313003\r\n" +
//                "313004\t盛京银行\t313004\r\n" +
//                "313005\t南充银行\t313005\r\n" +
//                "313006\t长沙银行\t313006\r\n" +
//                "313007\t陕西农信社\t313007\r\n" +
//                "313008\t江苏银行\t313008\r\n" +
//                "313009\t邮储银行\t313009\r\n" +
//                "313010\t西安银行\t313010\r\n" +
//                "313011\t长安银行\t313011\r\n" +
//                "313012\t成都银行\t313012\r\n" +
//                "313013\t云南省农信社\t313013\r\n" +
//                "313014\t吉林银行\t313014\r\n" +
//                "313015\t攀枝花市商业银行\t313015\r\n" +
//                "313016\t四川省农村信用联社\t313016\r\n" +
//                "313017\t甘肃银行\t313017\r\n" +
//                "313019\t宁夏银行\t313019\r\n" +
//                "313020\t曲靖市商业银行\t313020\r\n" +
//                "313021\t宜宾市商业银行\t313021\r\n" +
//                "313022\t雅安银行\t313022\r\n" +
//                "313023\t葫芦岛农村商业银行\t313023\r\n" +
//                "313024\t贵州银行\t313024\r\n" +
//                "313025\t湖北银行\t313025\r\n" +
//                "313026\t广西北部湾银行\t313026\r\n" +
//                "313027\t吉林省农信社\t313027\r\n" +
//                "313028\t葫芦岛银行\t313028\r\n" +
//                "313031\t青海银行\t313031\r\n" +
//                "313032\t贵阳银行\t313032\r\n" +
//                "313033\t湖北省农信社\t313033\r\n" +
//                "313034\t广西自治区农信社\t313034\r\n" +
//                "313035\t中原银行\t313035\r\n" +
//                "313036\t兰州银行\t313036\r\n" +
//                "313037\t保定银行\t313037\r\n" +
//                "313039\t昆仑银行\t313039\r\n" +
//                "313041\t浙商银行\t313041\r\n" +
//                "313042\t金华银行\t313042\r\n" +
//                "313043\t日照银行\t313043\r\n" +
//                "313044\t甘肃省农村信用社\t313044\r\n" +
//                "313046\t徽商银行\t313046\r\n" +
//                "313050\t河南农信\t313050\r\n" +
//                "313051\t浙江农信社\t313051\r\n" +
//                "313052\t云南红塔银行\t313052\r\n" +
//                "313053\t朝阳银行\t313053\r\n" +
//                "313055\t绵阳市商业银行\t313055\r\n" +
//                "313056\t西宁农商行\t313056\r\n" +
//                "313057\t厦门银行\t313057\r\n" +
//                "313059\t洛阳银行\t313059\r\n" +
//                "313060\t抚顺银行\t313060\r\n" +
//                "313061\t广元贵商村镇银行\t313061\r\n" +
//                "313063\t山西省农信社省联社\t313063\r\n" +
//                "313065\t晋商银行\t313065\r\n" +
//                "313066\t渤海银行\t313066\r\n" +
//                "313067\t江苏农信\t313067\r\n" +
//                "313068\t乐山市商业银行\t313068\r\n" +
//                "313069\t晋城银行\t313069\r\n" +
//                "313070\t汉口银行\t313070\r\n" +
//                "313071\t贵州农信\t313071\r\n" +
//                "313074\t南京银行\t313074\r\n" +
//                "313078\t锦州银行\t313078";
//
//        try {
//            FileUtil.write("C:\\node", a.getBytes());
//        } catch (Exception e) {
//            e.printStackTrace();
//        }

//        try {
//            System.out.println(DateUtil.str2Date("yyyyMMdd","2017-09-09"));
//        } catch (ParseException e) {
//            e.printStackTrace();
//        }
//        System.out.println(new BigDecimal("x").setScale(4, BigDecimal.ROUND_HALF_UP).abs());

//        Date tjnY;
//        try {
//            tjnY = DateUtil.str2Date("yyyy-MM", "2017-09");
//        } catch (ParseException e) {
//            throw new ErrorException("调节年月格式有误");
//        }
//        Calendar cal = Calendar.getInstance();
//        cal.setTime(tjnY);
//        cal.set(Calendar.DAY_OF_MONTH, cal.getMinimum(Calendar.DATE));
//        Date firstDay = cal.getTime();
//        cal.set(Calendar.DAY_OF_MONTH, cal.getActualMaximum(Calendar.DAY_OF_MONTH));
//        Date lastDay = cal.getTime();
//
//        String txDateBegin = DateUtil.date2Str(firstDay, "yyyyMMdd");
//        String txDateEnd = DateUtil.date2Str(lastDay, "yyyyMMdd");
//        System.out.println(txDateBegin);
//        System.out.println(txDateEnd);
//
//        try {
//            firstDay = DateUtil.str2Date("yyyyMMdd HH:mm:ss",txDateBegin + " 00:00:00");
//            lastDay = DateUtil.str2Date("yyyyMMdd HH:mm:ss",txDateEnd + " 23:59:59");
//        } catch (ParseException e) {
//            throw new ErrorException("调节年月格式有误");
//        }
//
//        System.out.println(firstDay);
//        System.out.println(lastDay);

//        System.out.println("20170809 111111".compareTo("20170809 "));

//        String strPath = "/home/gxy/aa/aaa/";
//        File file = new File(strPath);
//        File parent = file.getParentFile();
//        if (!file.exists()) {
//            file.mkdirs();
//        }
//        file.createNewFile();

//        byte[] b = new byte[1];
//        b[0] = 10;
//
//        System.out.println("ddd"+new String(b)+"ccc");
//        try {
//            System.out.println(DateUtil.str2Date("yyyy-MM-dd", ""));
//        } catch (ParseException e) {
//            e.printStackTrace();
//        }

//        List<SinglePaymentIn> list = new ArrayList<>();
//        SinglePaymentIn l1 = new SinglePaymentIn();
//        l1.setCrChgNo("1");
//        SinglePaymentIn l2 = new SinglePaymentIn();
//        l2.setCrChgNo("2");
//        SinglePaymentIn l3 = new SinglePaymentIn();
//        l3.setCrChgNo("3");
//        SinglePaymentIn l4 = new SinglePaymentIn();
//        l4.setCrChgNo("4");
//        list.add(l1);
//        list.add(l2);
//        list.add(l3);
//        list.add(l4);
//
//        Collections.reverse(list);
//
//        System.out.println(list);

//        BigDecimal a = new BigDecimal("100").negate();
//        System.out.println(a);

        try {
            System.out.println(DateUtil.str2Date("yyyyMMdd", DateUtil.getDateFromNow(Calendar.DAY_OF_YEAR, -30,"yyyyMMdd")));
            System.out.println(DateUtil.getDateFromNow(Calendar.DAY_OF_YEAR, -30,"yyyy-MM-dd"));
        } catch (ParseException e) {
            e.printStackTrace();
        }
//        System.out.println(StringUtil.toDBC("１２３８８７哈子８ｆ１ｅ1515汉子151515dfffgr２１ｆ２ｅ，／？　１２５１２３２１"));
//        System.out.println(FileFieldConv.fieldBCDtoASC("789CB58F314A04510C86FBB9C65A0F7FF2DECB9B57EB962BA2B0859DF7C865B6 B1D94AA690611D7658A650411DB6D801F10A82CDDA09665806F500261012FE3F E4CB11830A309C06668F9FD0F9C528019C5C24F6AC574A4A41ACB25221E6CB23 FEF496B96D6B361A49464998B940244F70044AD1272D37F7776AB70192E4E104 C1DC126CF5E6A57E7DECFAC5EDBA5AAEBEEA8FEAAD79DF755DAB7A00AC57DBBE 7CA8AEF5D70B83104124B3B3CBE37309C94078241EC4814D9822060E9B99895D 2AF469FFDC369FFF4C32999E9E64DF675B81BA", "GBK"));
//        System.out.println("0111111".substring(1));
//        test("1");
//        test("2", "3","4");
//        String s = "456454123212312 756454123212312";
//        System.out.println(subStr(s));
    }

    private static void test(String pram, Object... pram2) {
        System.out.println("pram:" + pram);
        if (pram2.length > 0) {
            System.out.println("pram2:" + Arrays.toString(pram2));
        }
    }

    private static String subStr(String s) {
        String[] strs = s.split("[^\\d]+");
        for (String str : strs) {
            if (str.length() == 15)
                return str;
        }

        return s;
    }
}
