<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd"
	default-autowire="byName">

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:META-INF/spring/config.properties"
		file-encoding="utf-8" ignore-unresolvable="true" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<!-- 可以加多个包 -->
				<value>com.handge.housingfund.database.entities</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="hibernate.connection.isolation">8</prop>
			</props>
		</property>
	</bean>

	<!--
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/product_1209?characterEncoding\=utf8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	-->
	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="10"/>
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="500"/>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20"/>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="10"/>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000"/>

		<!-- <property name="poolPreparedStatements" value="true" /> <property 
			name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
	</bean>

	<!-- 配置Hibernate事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="nestedTransactionAllowed" value="true" />
	</bean>

	<!-- 配置事务异常封装 -->
	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<aop:config>
		<!-- 通过aop定义事务增强切面 -->
		<aop:pointcut
			expression=" execution(* com.handge.housingfund.collection.service..*(..))"
			id="serviceMethod" />
		<!-- 引用事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
	</aop:config>
	<!-- 事务增强 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 事务属性定义 -->
		<tx:attributes>
			<tx:method name="save*" propagation="NESTED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="re*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="b*" propagation="REQUIRED" />
			<tx:method name="a*" propagation="REQUIRED" />
			<tx:method name="c*" propagation="REQUIRED" />
			<tx:method name="withdrawl*" propagation="REQUIRED" />
			<tx:method name="post*" propagation="REQUIRED" />
			<tx:method name="start*" propagation="NESTED" />
			<tx:method name="handle*" propagation="NESTED" />
			<tx:method name="submit*" propagation="NESTED" />
			<tx:method name="write*" propagation="REQUIRED" />
			<tx:method name="p*" propagation="NESTED" />
			<tx:method name="batch*" propagation="REQUIRED" />
			<tx:method name="send*" propagation="REQUIRED" />
			<tx:method name="check*" propagation="REQUIRED" />
			<tx:method name="transfer*" propagation="REQUIRED" />
			<tx:method name="into*" propagation="REQUIRED" />
			<tx:method name="out*" propagation="REQUIRED" />
			<tx:method name="bulk*" propagation="REQUIRES_NEW" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<context:annotation-config />
	<context:component-scan base-package="com.handge.housingfund">

	</context:component-scan>

	<!-- 开启aop注解方式 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
</beans>